Terminals unused in grammar

   LBRACKET
   RBRACKET
   ELSEIF
   ERROR


State 0 conflicts: 5 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration
    3                 | %empty

    4 external_declaration: function_definition
    5                     | declaration_statement

    6 declatator: identifier type_specifiers

    7 return_list: declatator
    8            | declatator COMMA return_list

    9 return_type: type_specifiers
   10            | LPAREN return_list RPAREN
   11            | %empty

   12 function_definition: FUNC identifier LPAREN RPAREN return_type compound_statement
   13                    | FUNC identifier LPAREN function_parameters RPAREN return_type compound_statement

   14 function_parameters: declatator
   15                    | declatator COMMA function_parameters

   16 compound_statement: LBRACE RBRACE
   17                   | LBRACE statement_list RBRACE

   18 statement_list: statement_type
   19               | statement_type statement_list

   20 statement_type: declaration_statement
   21               | function_definition
   22               | generic_statement

   23 generic_statement: selection_statement
   24                  | itteration_statement
   25                  | jump_statement

   26 selection_statement: IF LPAREN expression RPAREN compound_statement
   27                    | IF expression compound_statement
   28                    | IF LPAREN expression RPAREN compound_statement ELSE compound_statement
   29                    | IF expression compound_statement ELSE compound_statement
   30                    | SWITCH LPAREN expression RPAREN compound_statement

   31 expression: BOOLEAN_CONSTANT

   32 itteration_statement: WHILE LPAREN expression RPAREN compound_statement
   33                     | DO compound_statement WHILE LPAREN expression RPAREN SEMI
   34                     | FOR LPAREN expression SEMI expression SEMI expression RPAREN compound_statement
   35                     | FOR LPAREN expression SEMI expression SEMI RPAREN compound_statement
   36                     | FOR LPAREN expression SEMI SEMI expression RPAREN compound_statement
   37                     | FOR LPAREN expression SEMI SEMI RPAREN compound_statement
   38                     | FOR LPAREN SEMI expression SEMI expression RPAREN compound_statement
   39                     | FOR LPAREN SEMI expression SEMI RPAREN compound_statement
   40                     | FOR LPAREN SEMI SEMI expression RPAREN compound_statement
   41                     | FOR LPAREN SEMI SEMI RPAREN compound_statement

   42 jump_statement: GOTO identifier SEMI
   43               | CONTINUE SEMI
   44               | BREAK SEMI
   45               | RETURN SEMI
   46               | RETURN expression SEMI

   47 declaration_statement: identifier AUTOASSIGN assignment_expression SEMI
   48                      | qualifier_list identifier AUTOASSIGN assignment_expression SEMI
   49                      | qualifier_list declatator ASSIGN assignment_expression SEMI

   50 type_specifiers: type
   51                | type pointer_level

   52 pointer_level: ASTERISK
   53              | ASTERISK pointer_level

   54 assignment_expression: INTEGER_CONSTANT

   55 qualifier_list: qualifier
   56               | qualifier qualifier_list

   57 qualifier: LET
   58          | CONST
   59          | STATIC

   60 type: primative
   61     | VEC LANGLE INTEGER_CONSTANT RANGLE primative_specifier
   62     | VEC_2 primative_specifier
   63     | VEC_3 primative_specifier
   64     | VEC_4 primative_specifier
   65     | MAT LANGLE INTEGER_CONSTANT COMMA INTEGER_CONSTANT RANGLE primative_specifier
   66     | MAT_2 primative_specifier
   67     | MAT_3 primative_specifier
   68     | MAT_4 primative_specifier

   69 primative_specifier: %empty
   70                    | LANGLE primative RANGLE

   71 primative: BOOL
   72          | INT
   73          | INT_8
   74          | INT_16
   75          | INT_32
   76          | INT_64
   77          | CHAR
   78          | FLOAT
   79          | FLOAT_64

   80 identifier: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
COMMA (258) 8 15 65
SEMI (259) 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
AUTOASSIGN (260) 47 48
ASSIGN (261) 49
INTEGER_CONSTANT (262) 54 61 65
BOOLEAN_CONSTANT (263) 31
LET (264) 57
CONST (265) 58
STATIC (266) 59
FUNC (267) 12 13
ASTERISK (268) 52 53
LANGLE (269) 61 65 70
RANGLE (270) 61 65 70
LPAREN (271) 10 12 13 26 28 30 32 33 34 35 36 37 38 39 40 41
RPAREN (272) 10 12 13 26 28 30 32 33 34 35 36 37 38 39 40 41
LBRACE (273) 16 17
RBRACE (274) 16 17
LBRACKET (275)
RBRACKET (276)
IDENTIFIER (277) 80
BOOL (278) 71
IF (279) 26 27 28 29
ELSE (280) 28 29
ELSEIF (281)
SWITCH (282) 30
WHILE (283) 32 33
DO (284) 33
FOR (285) 34 35 36 37 38 39 40 41
BREAK (286) 44
CONTINUE (287) 43
RETURN (288) 45 46
GOTO (289) 42
INT (290) 72
INT_8 (291) 73
INT_16 (292) 74
INT_32 (293) 75
INT_64 (294) 76
CHAR (295) 77
FLOAT (296) 78
FLOAT_64 (297) 79
VEC (298) 61
VEC_2 (299) 62
VEC_3 (300) 63
VEC_4 (301) 64
MAT (302) 65
MAT_2 (303) 66
MAT_3 (304) 67
MAT_4 (305) 68
ERROR (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
translation_unit (53)
    on left: 1 2 3, on right: 0 2
external_declaration (54)
    on left: 4 5, on right: 1 2
declatator (55)
    on left: 6, on right: 7 8 14 15 49
return_list (56)
    on left: 7 8, on right: 8 10
return_type (57)
    on left: 9 10 11, on right: 12 13
function_definition (58)
    on left: 12 13, on right: 4 21
function_parameters (59)
    on left: 14 15, on right: 13 15
compound_statement (60)
    on left: 16 17, on right: 12 13 26 27 28 29 30 32 33 34 35 36 37
    38 39 40 41
statement_list (61)
    on left: 18 19, on right: 17 19
statement_type (62)
    on left: 20 21 22, on right: 18 19
generic_statement (63)
    on left: 23 24 25, on right: 22
selection_statement (64)
    on left: 26 27 28 29 30, on right: 23
expression (65)
    on left: 31, on right: 26 27 28 29 30 32 33 34 35 36 37 38 39 40
    46
itteration_statement (66)
    on left: 32 33 34 35 36 37 38 39 40 41, on right: 24
jump_statement (67)
    on left: 42 43 44 45 46, on right: 25
declaration_statement (68)
    on left: 47 48 49, on right: 5 20
type_specifiers (69)
    on left: 50 51, on right: 6 9
pointer_level (70)
    on left: 52 53, on right: 51 53
assignment_expression (71)
    on left: 54, on right: 47 48 49
qualifier_list (72)
    on left: 55 56, on right: 48 49 56
qualifier (73)
    on left: 57 58 59, on right: 55 56
type (74)
    on left: 60 61 62 63 64 65 66 67 68, on right: 50 51
primative_specifier (75)
    on left: 69 70, on right: 61 62 63 64 65 66 67 68
primative (76)
    on left: 71 72 73 74 75 76 77 78 79, on right: 60 70
identifier (77)
    on left: 80, on right: 6 12 13 42 47 48


State 0

    0 $accept: . translation_unit $end

    LET         shift, and go to state 1
    CONST       shift, and go to state 2
    STATIC      shift, and go to state 3
    FUNC        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    LET         [reduce using rule 3 (translation_unit)]
    CONST       [reduce using rule 3 (translation_unit)]
    STATIC      [reduce using rule 3 (translation_unit)]
    FUNC        [reduce using rule 3 (translation_unit)]
    IDENTIFIER  [reduce using rule 3 (translation_unit)]
    $default    reduce using rule 3 (translation_unit)

    translation_unit       go to state 6
    external_declaration   go to state 7
    function_definition    go to state 8
    declaration_statement  go to state 9
    qualifier_list         go to state 10
    qualifier              go to state 11
    identifier             go to state 12


State 1

   57 qualifier: LET .

    $default  reduce using rule 57 (qualifier)


State 2

   58 qualifier: CONST .

    $default  reduce using rule 58 (qualifier)


State 3

   59 qualifier: STATIC .

    $default  reduce using rule 59 (qualifier)


State 4

   12 function_definition: FUNC . identifier LPAREN RPAREN return_type compound_statement
   13                    | FUNC . identifier LPAREN function_parameters RPAREN return_type compound_statement

    IDENTIFIER  shift, and go to state 5

    identifier  go to state 13


State 5

   80 identifier: IDENTIFIER .

    $default  reduce using rule 80 (identifier)


State 6

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 14
    LET         shift, and go to state 1
    CONST       shift, and go to state 2
    STATIC      shift, and go to state 3
    FUNC        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    external_declaration   go to state 15
    function_definition    go to state 8
    declaration_statement  go to state 9
    qualifier_list         go to state 10
    qualifier              go to state 11
    identifier             go to state 12


State 7

    1 translation_unit: external_declaration .

    $default  reduce using rule 1 (translation_unit)


State 8

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 9

    5 external_declaration: declaration_statement .

    $default  reduce using rule 5 (external_declaration)


State 10

   48 declaration_statement: qualifier_list . identifier AUTOASSIGN assignment_expression SEMI
   49                      | qualifier_list . declatator ASSIGN assignment_expression SEMI

    IDENTIFIER  shift, and go to state 5

    declatator  go to state 16
    identifier  go to state 17


State 11

   55 qualifier_list: qualifier .
   56               | qualifier . qualifier_list

    LET     shift, and go to state 1
    CONST   shift, and go to state 2
    STATIC  shift, and go to state 3

    $default  reduce using rule 55 (qualifier_list)

    qualifier_list  go to state 18
    qualifier       go to state 11


State 12

   47 declaration_statement: identifier . AUTOASSIGN assignment_expression SEMI

    AUTOASSIGN  shift, and go to state 19


State 13

   12 function_definition: FUNC identifier . LPAREN RPAREN return_type compound_statement
   13                    | FUNC identifier . LPAREN function_parameters RPAREN return_type compound_statement

    LPAREN  shift, and go to state 20


State 14

    0 $accept: translation_unit $end .

    $default  accept


State 15

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


State 16

   49 declaration_statement: qualifier_list declatator . ASSIGN assignment_expression SEMI

    ASSIGN  shift, and go to state 21


State 17

    6 declatator: identifier . type_specifiers
   48 declaration_statement: qualifier_list identifier . AUTOASSIGN assignment_expression SEMI

    AUTOASSIGN  shift, and go to state 22
    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    INT_8       shift, and go to state 25
    INT_16      shift, and go to state 26
    INT_32      shift, and go to state 27
    INT_64      shift, and go to state 28
    CHAR        shift, and go to state 29
    FLOAT       shift, and go to state 30
    FLOAT_64    shift, and go to state 31
    VEC         shift, and go to state 32
    VEC_2       shift, and go to state 33
    VEC_3       shift, and go to state 34
    VEC_4       shift, and go to state 35
    MAT         shift, and go to state 36
    MAT_2       shift, and go to state 37
    MAT_3       shift, and go to state 38
    MAT_4       shift, and go to state 39

    type_specifiers  go to state 40
    type             go to state 41
    primative        go to state 42


State 18

   56 qualifier_list: qualifier qualifier_list .

    $default  reduce using rule 56 (qualifier_list)


State 19

   47 declaration_statement: identifier AUTOASSIGN . assignment_expression SEMI

    INTEGER_CONSTANT  shift, and go to state 43

    assignment_expression  go to state 44


State 20

   12 function_definition: FUNC identifier LPAREN . RPAREN return_type compound_statement
   13                    | FUNC identifier LPAREN . function_parameters RPAREN return_type compound_statement

    RPAREN      shift, and go to state 45
    IDENTIFIER  shift, and go to state 5

    declatator           go to state 46
    function_parameters  go to state 47
    identifier           go to state 48


State 21

   49 declaration_statement: qualifier_list declatator ASSIGN . assignment_expression SEMI

    INTEGER_CONSTANT  shift, and go to state 43

    assignment_expression  go to state 49


State 22

   48 declaration_statement: qualifier_list identifier AUTOASSIGN . assignment_expression SEMI

    INTEGER_CONSTANT  shift, and go to state 43

    assignment_expression  go to state 50


State 23

   71 primative: BOOL .

    $default  reduce using rule 71 (primative)


State 24

   72 primative: INT .

    $default  reduce using rule 72 (primative)


State 25

   73 primative: INT_8 .

    $default  reduce using rule 73 (primative)


State 26

   74 primative: INT_16 .

    $default  reduce using rule 74 (primative)


State 27

   75 primative: INT_32 .

    $default  reduce using rule 75 (primative)


State 28

   76 primative: INT_64 .

    $default  reduce using rule 76 (primative)


State 29

   77 primative: CHAR .

    $default  reduce using rule 77 (primative)


State 30

   78 primative: FLOAT .

    $default  reduce using rule 78 (primative)


State 31

   79 primative: FLOAT_64 .

    $default  reduce using rule 79 (primative)


State 32

   61 type: VEC . LANGLE INTEGER_CONSTANT RANGLE primative_specifier

    LANGLE  shift, and go to state 51


State 33

   62 type: VEC_2 . primative_specifier

    LANGLE  shift, and go to state 52

    $default  reduce using rule 69 (primative_specifier)

    primative_specifier  go to state 53


State 34

   63 type: VEC_3 . primative_specifier

    LANGLE  shift, and go to state 52

    $default  reduce using rule 69 (primative_specifier)

    primative_specifier  go to state 54


State 35

   64 type: VEC_4 . primative_specifier

    LANGLE  shift, and go to state 52

    $default  reduce using rule 69 (primative_specifier)

    primative_specifier  go to state 55


State 36

   65 type: MAT . LANGLE INTEGER_CONSTANT COMMA INTEGER_CONSTANT RANGLE primative_specifier

    LANGLE  shift, and go to state 56


State 37

   66 type: MAT_2 . primative_specifier

    LANGLE  shift, and go to state 52

    $default  reduce using rule 69 (primative_specifier)

    primative_specifier  go to state 57


State 38

   67 type: MAT_3 . primative_specifier

    LANGLE  shift, and go to state 52

    $default  reduce using rule 69 (primative_specifier)

    primative_specifier  go to state 58


State 39

   68 type: MAT_4 . primative_specifier

    LANGLE  shift, and go to state 52

    $default  reduce using rule 69 (primative_specifier)

    primative_specifier  go to state 59


State 40

    6 declatator: identifier type_specifiers .

    $default  reduce using rule 6 (declatator)


State 41

   50 type_specifiers: type .
   51                | type . pointer_level

    ASTERISK  shift, and go to state 60

    $default  reduce using rule 50 (type_specifiers)

    pointer_level  go to state 61


State 42

   60 type: primative .

    $default  reduce using rule 60 (type)


State 43

   54 assignment_expression: INTEGER_CONSTANT .

    $default  reduce using rule 54 (assignment_expression)


State 44

   47 declaration_statement: identifier AUTOASSIGN assignment_expression . SEMI

    SEMI  shift, and go to state 62


State 45

   12 function_definition: FUNC identifier LPAREN RPAREN . return_type compound_statement

    LPAREN    shift, and go to state 63
    BOOL      shift, and go to state 23
    INT       shift, and go to state 24
    INT_8     shift, and go to state 25
    INT_16    shift, and go to state 26
    INT_32    shift, and go to state 27
    INT_64    shift, and go to state 28
    CHAR      shift, and go to state 29
    FLOAT     shift, and go to state 30
    FLOAT_64  shift, and go to state 31
    VEC       shift, and go to state 32
    VEC_2     shift, and go to state 33
    VEC_3     shift, and go to state 34
    VEC_4     shift, and go to state 35
    MAT       shift, and go to state 36
    MAT_2     shift, and go to state 37
    MAT_3     shift, and go to state 38
    MAT_4     shift, and go to state 39

    $default  reduce using rule 11 (return_type)

    return_type      go to state 64
    type_specifiers  go to state 65
    type             go to state 41
    primative        go to state 42


State 46

   14 function_parameters: declatator .
   15                    | declatator . COMMA function_parameters

    COMMA  shift, and go to state 66

    $default  reduce using rule 14 (function_parameters)


State 47

   13 function_definition: FUNC identifier LPAREN function_parameters . RPAREN return_type compound_statement

    RPAREN  shift, and go to state 67


State 48

    6 declatator: identifier . type_specifiers

    BOOL      shift, and go to state 23
    INT       shift, and go to state 24
    INT_8     shift, and go to state 25
    INT_16    shift, and go to state 26
    INT_32    shift, and go to state 27
    INT_64    shift, and go to state 28
    CHAR      shift, and go to state 29
    FLOAT     shift, and go to state 30
    FLOAT_64  shift, and go to state 31
    VEC       shift, and go to state 32
    VEC_2     shift, and go to state 33
    VEC_3     shift, and go to state 34
    VEC_4     shift, and go to state 35
    MAT       shift, and go to state 36
    MAT_2     shift, and go to state 37
    MAT_3     shift, and go to state 38
    MAT_4     shift, and go to state 39

    type_specifiers  go to state 40
    type             go to state 41
    primative        go to state 42


State 49

   49 declaration_statement: qualifier_list declatator ASSIGN assignment_expression . SEMI

    SEMI  shift, and go to state 68


State 50

   48 declaration_statement: qualifier_list identifier AUTOASSIGN assignment_expression . SEMI

    SEMI  shift, and go to state 69


State 51

   61 type: VEC LANGLE . INTEGER_CONSTANT RANGLE primative_specifier

    INTEGER_CONSTANT  shift, and go to state 70


State 52

   70 primative_specifier: LANGLE . primative RANGLE

    BOOL      shift, and go to state 23
    INT       shift, and go to state 24
    INT_8     shift, and go to state 25
    INT_16    shift, and go to state 26
    INT_32    shift, and go to state 27
    INT_64    shift, and go to state 28
    CHAR      shift, and go to state 29
    FLOAT     shift, and go to state 30
    FLOAT_64  shift, and go to state 31

    primative  go to state 71


State 53

   62 type: VEC_2 primative_specifier .

    $default  reduce using rule 62 (type)


State 54

   63 type: VEC_3 primative_specifier .

    $default  reduce using rule 63 (type)


State 55

   64 type: VEC_4 primative_specifier .

    $default  reduce using rule 64 (type)


State 56

   65 type: MAT LANGLE . INTEGER_CONSTANT COMMA INTEGER_CONSTANT RANGLE primative_specifier

    INTEGER_CONSTANT  shift, and go to state 72


State 57

   66 type: MAT_2 primative_specifier .

    $default  reduce using rule 66 (type)


State 58

   67 type: MAT_3 primative_specifier .

    $default  reduce using rule 67 (type)


State 59

   68 type: MAT_4 primative_specifier .

    $default  reduce using rule 68 (type)


State 60

   52 pointer_level: ASTERISK .
   53              | ASTERISK . pointer_level

    ASTERISK  shift, and go to state 60

    $default  reduce using rule 52 (pointer_level)

    pointer_level  go to state 73


State 61

   51 type_specifiers: type pointer_level .

    $default  reduce using rule 51 (type_specifiers)


State 62

   47 declaration_statement: identifier AUTOASSIGN assignment_expression SEMI .

    $default  reduce using rule 47 (declaration_statement)


State 63

   10 return_type: LPAREN . return_list RPAREN

    IDENTIFIER  shift, and go to state 5

    declatator   go to state 74
    return_list  go to state 75
    identifier   go to state 48


State 64

   12 function_definition: FUNC identifier LPAREN RPAREN return_type . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 77


State 65

    9 return_type: type_specifiers .

    $default  reduce using rule 9 (return_type)


State 66

   15 function_parameters: declatator COMMA . function_parameters

    IDENTIFIER  shift, and go to state 5

    declatator           go to state 46
    function_parameters  go to state 78
    identifier           go to state 48


State 67

   13 function_definition: FUNC identifier LPAREN function_parameters RPAREN . return_type compound_statement

    LPAREN    shift, and go to state 63
    BOOL      shift, and go to state 23
    INT       shift, and go to state 24
    INT_8     shift, and go to state 25
    INT_16    shift, and go to state 26
    INT_32    shift, and go to state 27
    INT_64    shift, and go to state 28
    CHAR      shift, and go to state 29
    FLOAT     shift, and go to state 30
    FLOAT_64  shift, and go to state 31
    VEC       shift, and go to state 32
    VEC_2     shift, and go to state 33
    VEC_3     shift, and go to state 34
    VEC_4     shift, and go to state 35
    MAT       shift, and go to state 36
    MAT_2     shift, and go to state 37
    MAT_3     shift, and go to state 38
    MAT_4     shift, and go to state 39

    $default  reduce using rule 11 (return_type)

    return_type      go to state 79
    type_specifiers  go to state 65
    type             go to state 41
    primative        go to state 42


State 68

   49 declaration_statement: qualifier_list declatator ASSIGN assignment_expression SEMI .

    $default  reduce using rule 49 (declaration_statement)


State 69

   48 declaration_statement: qualifier_list identifier AUTOASSIGN assignment_expression SEMI .

    $default  reduce using rule 48 (declaration_statement)


State 70

   61 type: VEC LANGLE INTEGER_CONSTANT . RANGLE primative_specifier

    RANGLE  shift, and go to state 80


State 71

   70 primative_specifier: LANGLE primative . RANGLE

    RANGLE  shift, and go to state 81


State 72

   65 type: MAT LANGLE INTEGER_CONSTANT . COMMA INTEGER_CONSTANT RANGLE primative_specifier

    COMMA  shift, and go to state 82


State 73

   53 pointer_level: ASTERISK pointer_level .

    $default  reduce using rule 53 (pointer_level)


State 74

    7 return_list: declatator .
    8            | declatator . COMMA return_list

    COMMA  shift, and go to state 83

    $default  reduce using rule 7 (return_list)


State 75

   10 return_type: LPAREN return_list . RPAREN

    RPAREN  shift, and go to state 84


State 76

   16 compound_statement: LBRACE . RBRACE
   17                   | LBRACE . statement_list RBRACE

    LET         shift, and go to state 1
    CONST       shift, and go to state 2
    STATIC      shift, and go to state 3
    FUNC        shift, and go to state 4
    RBRACE      shift, and go to state 85
    IDENTIFIER  shift, and go to state 5
    IF          shift, and go to state 86
    SWITCH      shift, and go to state 87
    WHILE       shift, and go to state 88
    DO          shift, and go to state 89
    FOR         shift, and go to state 90
    BREAK       shift, and go to state 91
    CONTINUE    shift, and go to state 92
    RETURN      shift, and go to state 93
    GOTO        shift, and go to state 94

    function_definition    go to state 95
    statement_list         go to state 96
    statement_type         go to state 97
    generic_statement      go to state 98
    selection_statement    go to state 99
    itteration_statement   go to state 100
    jump_statement         go to state 101
    declaration_statement  go to state 102
    qualifier_list         go to state 10
    qualifier              go to state 11
    identifier             go to state 12


State 77

   12 function_definition: FUNC identifier LPAREN RPAREN return_type compound_statement .

    $default  reduce using rule 12 (function_definition)


State 78

   15 function_parameters: declatator COMMA function_parameters .

    $default  reduce using rule 15 (function_parameters)


State 79

   13 function_definition: FUNC identifier LPAREN function_parameters RPAREN return_type . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 103


State 80

   61 type: VEC LANGLE INTEGER_CONSTANT RANGLE . primative_specifier

    LANGLE  shift, and go to state 52

    $default  reduce using rule 69 (primative_specifier)

    primative_specifier  go to state 104


State 81

   70 primative_specifier: LANGLE primative RANGLE .

    $default  reduce using rule 70 (primative_specifier)


State 82

   65 type: MAT LANGLE INTEGER_CONSTANT COMMA . INTEGER_CONSTANT RANGLE primative_specifier

    INTEGER_CONSTANT  shift, and go to state 105


State 83

    8 return_list: declatator COMMA . return_list

    IDENTIFIER  shift, and go to state 5

    declatator   go to state 74
    return_list  go to state 106
    identifier   go to state 48


State 84

   10 return_type: LPAREN return_list RPAREN .

    $default  reduce using rule 10 (return_type)


State 85

   16 compound_statement: LBRACE RBRACE .

    $default  reduce using rule 16 (compound_statement)


State 86

   26 selection_statement: IF . LPAREN expression RPAREN compound_statement
   27                    | IF . expression compound_statement
   28                    | IF . LPAREN expression RPAREN compound_statement ELSE compound_statement
   29                    | IF . expression compound_statement ELSE compound_statement

    BOOLEAN_CONSTANT  shift, and go to state 107
    LPAREN            shift, and go to state 108

    expression  go to state 109


State 87

   30 selection_statement: SWITCH . LPAREN expression RPAREN compound_statement

    LPAREN  shift, and go to state 110


State 88

   32 itteration_statement: WHILE . LPAREN expression RPAREN compound_statement

    LPAREN  shift, and go to state 111


State 89

   33 itteration_statement: DO . compound_statement WHILE LPAREN expression RPAREN SEMI

    LBRACE  shift, and go to state 76

    compound_statement  go to state 112


State 90

   34 itteration_statement: FOR . LPAREN expression SEMI expression SEMI expression RPAREN compound_statement
   35                     | FOR . LPAREN expression SEMI expression SEMI RPAREN compound_statement
   36                     | FOR . LPAREN expression SEMI SEMI expression RPAREN compound_statement
   37                     | FOR . LPAREN expression SEMI SEMI RPAREN compound_statement
   38                     | FOR . LPAREN SEMI expression SEMI expression RPAREN compound_statement
   39                     | FOR . LPAREN SEMI expression SEMI RPAREN compound_statement
   40                     | FOR . LPAREN SEMI SEMI expression RPAREN compound_statement
   41                     | FOR . LPAREN SEMI SEMI RPAREN compound_statement

    LPAREN  shift, and go to state 113


State 91

   44 jump_statement: BREAK . SEMI

    SEMI  shift, and go to state 114


State 92

   43 jump_statement: CONTINUE . SEMI

    SEMI  shift, and go to state 115


State 93

   45 jump_statement: RETURN . SEMI
   46               | RETURN . expression SEMI

    SEMI              shift, and go to state 116
    BOOLEAN_CONSTANT  shift, and go to state 107

    expression  go to state 117


State 94

   42 jump_statement: GOTO . identifier SEMI

    IDENTIFIER  shift, and go to state 5

    identifier  go to state 118


State 95

   21 statement_type: function_definition .

    $default  reduce using rule 21 (statement_type)


State 96

   17 compound_statement: LBRACE statement_list . RBRACE

    RBRACE  shift, and go to state 119


State 97

   18 statement_list: statement_type .
   19               | statement_type . statement_list

    LET         shift, and go to state 1
    CONST       shift, and go to state 2
    STATIC      shift, and go to state 3
    FUNC        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    IF          shift, and go to state 86
    SWITCH      shift, and go to state 87
    WHILE       shift, and go to state 88
    DO          shift, and go to state 89
    FOR         shift, and go to state 90
    BREAK       shift, and go to state 91
    CONTINUE    shift, and go to state 92
    RETURN      shift, and go to state 93
    GOTO        shift, and go to state 94

    $default  reduce using rule 18 (statement_list)

    function_definition    go to state 95
    statement_list         go to state 120
    statement_type         go to state 97
    generic_statement      go to state 98
    selection_statement    go to state 99
    itteration_statement   go to state 100
    jump_statement         go to state 101
    declaration_statement  go to state 102
    qualifier_list         go to state 10
    qualifier              go to state 11
    identifier             go to state 12


State 98

   22 statement_type: generic_statement .

    $default  reduce using rule 22 (statement_type)


State 99

   23 generic_statement: selection_statement .

    $default  reduce using rule 23 (generic_statement)


State 100

   24 generic_statement: itteration_statement .

    $default  reduce using rule 24 (generic_statement)


State 101

   25 generic_statement: jump_statement .

    $default  reduce using rule 25 (generic_statement)


State 102

   20 statement_type: declaration_statement .

    $default  reduce using rule 20 (statement_type)


State 103

   13 function_definition: FUNC identifier LPAREN function_parameters RPAREN return_type compound_statement .

    $default  reduce using rule 13 (function_definition)


State 104

   61 type: VEC LANGLE INTEGER_CONSTANT RANGLE primative_specifier .

    $default  reduce using rule 61 (type)


State 105

   65 type: MAT LANGLE INTEGER_CONSTANT COMMA INTEGER_CONSTANT . RANGLE primative_specifier

    RANGLE  shift, and go to state 121


State 106

    8 return_list: declatator COMMA return_list .

    $default  reduce using rule 8 (return_list)


State 107

   31 expression: BOOLEAN_CONSTANT .

    $default  reduce using rule 31 (expression)


State 108

   26 selection_statement: IF LPAREN . expression RPAREN compound_statement
   28                    | IF LPAREN . expression RPAREN compound_statement ELSE compound_statement

    BOOLEAN_CONSTANT  shift, and go to state 107

    expression  go to state 122


State 109

   27 selection_statement: IF expression . compound_statement
   29                    | IF expression . compound_statement ELSE compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 123


State 110

   30 selection_statement: SWITCH LPAREN . expression RPAREN compound_statement

    BOOLEAN_CONSTANT  shift, and go to state 107

    expression  go to state 124


State 111

   32 itteration_statement: WHILE LPAREN . expression RPAREN compound_statement

    BOOLEAN_CONSTANT  shift, and go to state 107

    expression  go to state 125


State 112

   33 itteration_statement: DO compound_statement . WHILE LPAREN expression RPAREN SEMI

    WHILE  shift, and go to state 126


State 113

   34 itteration_statement: FOR LPAREN . expression SEMI expression SEMI expression RPAREN compound_statement
   35                     | FOR LPAREN . expression SEMI expression SEMI RPAREN compound_statement
   36                     | FOR LPAREN . expression SEMI SEMI expression RPAREN compound_statement
   37                     | FOR LPAREN . expression SEMI SEMI RPAREN compound_statement
   38                     | FOR LPAREN . SEMI expression SEMI expression RPAREN compound_statement
   39                     | FOR LPAREN . SEMI expression SEMI RPAREN compound_statement
   40                     | FOR LPAREN . SEMI SEMI expression RPAREN compound_statement
   41                     | FOR LPAREN . SEMI SEMI RPAREN compound_statement

    SEMI              shift, and go to state 127
    BOOLEAN_CONSTANT  shift, and go to state 107

    expression  go to state 128


State 114

   44 jump_statement: BREAK SEMI .

    $default  reduce using rule 44 (jump_statement)


State 115

   43 jump_statement: CONTINUE SEMI .

    $default  reduce using rule 43 (jump_statement)


State 116

   45 jump_statement: RETURN SEMI .

    $default  reduce using rule 45 (jump_statement)


State 117

   46 jump_statement: RETURN expression . SEMI

    SEMI  shift, and go to state 129


State 118

   42 jump_statement: GOTO identifier . SEMI

    SEMI  shift, and go to state 130


State 119

   17 compound_statement: LBRACE statement_list RBRACE .

    $default  reduce using rule 17 (compound_statement)


State 120

   19 statement_list: statement_type statement_list .

    $default  reduce using rule 19 (statement_list)


State 121

   65 type: MAT LANGLE INTEGER_CONSTANT COMMA INTEGER_CONSTANT RANGLE . primative_specifier

    LANGLE  shift, and go to state 52

    $default  reduce using rule 69 (primative_specifier)

    primative_specifier  go to state 131


State 122

   26 selection_statement: IF LPAREN expression . RPAREN compound_statement
   28                    | IF LPAREN expression . RPAREN compound_statement ELSE compound_statement

    RPAREN  shift, and go to state 132


State 123

   27 selection_statement: IF expression compound_statement .
   29                    | IF expression compound_statement . ELSE compound_statement

    ELSE  shift, and go to state 133

    $default  reduce using rule 27 (selection_statement)


State 124

   30 selection_statement: SWITCH LPAREN expression . RPAREN compound_statement

    RPAREN  shift, and go to state 134


State 125

   32 itteration_statement: WHILE LPAREN expression . RPAREN compound_statement

    RPAREN  shift, and go to state 135


State 126

   33 itteration_statement: DO compound_statement WHILE . LPAREN expression RPAREN SEMI

    LPAREN  shift, and go to state 136


State 127

   38 itteration_statement: FOR LPAREN SEMI . expression SEMI expression RPAREN compound_statement
   39                     | FOR LPAREN SEMI . expression SEMI RPAREN compound_statement
   40                     | FOR LPAREN SEMI . SEMI expression RPAREN compound_statement
   41                     | FOR LPAREN SEMI . SEMI RPAREN compound_statement

    SEMI              shift, and go to state 137
    BOOLEAN_CONSTANT  shift, and go to state 107

    expression  go to state 138


State 128

   34 itteration_statement: FOR LPAREN expression . SEMI expression SEMI expression RPAREN compound_statement
   35                     | FOR LPAREN expression . SEMI expression SEMI RPAREN compound_statement
   36                     | FOR LPAREN expression . SEMI SEMI expression RPAREN compound_statement
   37                     | FOR LPAREN expression . SEMI SEMI RPAREN compound_statement

    SEMI  shift, and go to state 139


State 129

   46 jump_statement: RETURN expression SEMI .

    $default  reduce using rule 46 (jump_statement)


State 130

   42 jump_statement: GOTO identifier SEMI .

    $default  reduce using rule 42 (jump_statement)


State 131

   65 type: MAT LANGLE INTEGER_CONSTANT COMMA INTEGER_CONSTANT RANGLE primative_specifier .

    $default  reduce using rule 65 (type)


State 132

   26 selection_statement: IF LPAREN expression RPAREN . compound_statement
   28                    | IF LPAREN expression RPAREN . compound_statement ELSE compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 140


State 133

   29 selection_statement: IF expression compound_statement ELSE . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 141


State 134

   30 selection_statement: SWITCH LPAREN expression RPAREN . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 142


State 135

   32 itteration_statement: WHILE LPAREN expression RPAREN . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 143


State 136

   33 itteration_statement: DO compound_statement WHILE LPAREN . expression RPAREN SEMI

    BOOLEAN_CONSTANT  shift, and go to state 107

    expression  go to state 144


State 137

   40 itteration_statement: FOR LPAREN SEMI SEMI . expression RPAREN compound_statement
   41                     | FOR LPAREN SEMI SEMI . RPAREN compound_statement

    BOOLEAN_CONSTANT  shift, and go to state 107
    RPAREN            shift, and go to state 145

    expression  go to state 146


State 138

   38 itteration_statement: FOR LPAREN SEMI expression . SEMI expression RPAREN compound_statement
   39                     | FOR LPAREN SEMI expression . SEMI RPAREN compound_statement

    SEMI  shift, and go to state 147


State 139

   34 itteration_statement: FOR LPAREN expression SEMI . expression SEMI expression RPAREN compound_statement
   35                     | FOR LPAREN expression SEMI . expression SEMI RPAREN compound_statement
   36                     | FOR LPAREN expression SEMI . SEMI expression RPAREN compound_statement
   37                     | FOR LPAREN expression SEMI . SEMI RPAREN compound_statement

    SEMI              shift, and go to state 148
    BOOLEAN_CONSTANT  shift, and go to state 107

    expression  go to state 149


State 140

   26 selection_statement: IF LPAREN expression RPAREN compound_statement .
   28                    | IF LPAREN expression RPAREN compound_statement . ELSE compound_statement

    ELSE  shift, and go to state 150

    $default  reduce using rule 26 (selection_statement)


State 141

   29 selection_statement: IF expression compound_statement ELSE compound_statement .

    $default  reduce using rule 29 (selection_statement)


State 142

   30 selection_statement: SWITCH LPAREN expression RPAREN compound_statement .

    $default  reduce using rule 30 (selection_statement)


State 143

   32 itteration_statement: WHILE LPAREN expression RPAREN compound_statement .

    $default  reduce using rule 32 (itteration_statement)


State 144

   33 itteration_statement: DO compound_statement WHILE LPAREN expression . RPAREN SEMI

    RPAREN  shift, and go to state 151


State 145

   41 itteration_statement: FOR LPAREN SEMI SEMI RPAREN . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 152


State 146

   40 itteration_statement: FOR LPAREN SEMI SEMI expression . RPAREN compound_statement

    RPAREN  shift, and go to state 153


State 147

   38 itteration_statement: FOR LPAREN SEMI expression SEMI . expression RPAREN compound_statement
   39                     | FOR LPAREN SEMI expression SEMI . RPAREN compound_statement

    BOOLEAN_CONSTANT  shift, and go to state 107
    RPAREN            shift, and go to state 154

    expression  go to state 155


State 148

   36 itteration_statement: FOR LPAREN expression SEMI SEMI . expression RPAREN compound_statement
   37                     | FOR LPAREN expression SEMI SEMI . RPAREN compound_statement

    BOOLEAN_CONSTANT  shift, and go to state 107
    RPAREN            shift, and go to state 156

    expression  go to state 157


State 149

   34 itteration_statement: FOR LPAREN expression SEMI expression . SEMI expression RPAREN compound_statement
   35                     | FOR LPAREN expression SEMI expression . SEMI RPAREN compound_statement

    SEMI  shift, and go to state 158


State 150

   28 selection_statement: IF LPAREN expression RPAREN compound_statement ELSE . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 159


State 151

   33 itteration_statement: DO compound_statement WHILE LPAREN expression RPAREN . SEMI

    SEMI  shift, and go to state 160


State 152

   41 itteration_statement: FOR LPAREN SEMI SEMI RPAREN compound_statement .

    $default  reduce using rule 41 (itteration_statement)


State 153

   40 itteration_statement: FOR LPAREN SEMI SEMI expression RPAREN . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 161


State 154

   39 itteration_statement: FOR LPAREN SEMI expression SEMI RPAREN . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 162


State 155

   38 itteration_statement: FOR LPAREN SEMI expression SEMI expression . RPAREN compound_statement

    RPAREN  shift, and go to state 163


State 156

   37 itteration_statement: FOR LPAREN expression SEMI SEMI RPAREN . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 164


State 157

   36 itteration_statement: FOR LPAREN expression SEMI SEMI expression . RPAREN compound_statement

    RPAREN  shift, and go to state 165


State 158

   34 itteration_statement: FOR LPAREN expression SEMI expression SEMI . expression RPAREN compound_statement
   35                     | FOR LPAREN expression SEMI expression SEMI . RPAREN compound_statement

    BOOLEAN_CONSTANT  shift, and go to state 107
    RPAREN            shift, and go to state 166

    expression  go to state 167


State 159

   28 selection_statement: IF LPAREN expression RPAREN compound_statement ELSE compound_statement .

    $default  reduce using rule 28 (selection_statement)


State 160

   33 itteration_statement: DO compound_statement WHILE LPAREN expression RPAREN SEMI .

    $default  reduce using rule 33 (itteration_statement)


State 161

   40 itteration_statement: FOR LPAREN SEMI SEMI expression RPAREN compound_statement .

    $default  reduce using rule 40 (itteration_statement)


State 162

   39 itteration_statement: FOR LPAREN SEMI expression SEMI RPAREN compound_statement .

    $default  reduce using rule 39 (itteration_statement)


State 163

   38 itteration_statement: FOR LPAREN SEMI expression SEMI expression RPAREN . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 168


State 164

   37 itteration_statement: FOR LPAREN expression SEMI SEMI RPAREN compound_statement .

    $default  reduce using rule 37 (itteration_statement)


State 165

   36 itteration_statement: FOR LPAREN expression SEMI SEMI expression RPAREN . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 169


State 166

   35 itteration_statement: FOR LPAREN expression SEMI expression SEMI RPAREN . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 170


State 167

   34 itteration_statement: FOR LPAREN expression SEMI expression SEMI expression . RPAREN compound_statement

    RPAREN  shift, and go to state 171


State 168

   38 itteration_statement: FOR LPAREN SEMI expression SEMI expression RPAREN compound_statement .

    $default  reduce using rule 38 (itteration_statement)


State 169

   36 itteration_statement: FOR LPAREN expression SEMI SEMI expression RPAREN compound_statement .

    $default  reduce using rule 36 (itteration_statement)


State 170

   35 itteration_statement: FOR LPAREN expression SEMI expression SEMI RPAREN compound_statement .

    $default  reduce using rule 35 (itteration_statement)


State 171

   34 itteration_statement: FOR LPAREN expression SEMI expression SEMI expression RPAREN . compound_statement

    LBRACE  shift, and go to state 76

    compound_statement  go to state 172


State 172

   34 itteration_statement: FOR LPAREN expression SEMI expression SEMI expression RPAREN compound_statement .

    $default  reduce using rule 34 (itteration_statement)
